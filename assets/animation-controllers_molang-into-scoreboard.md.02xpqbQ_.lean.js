import{_ as e,c as h,a as n,P as t,b as s,T as i,U as l,r as p,o as k}from"./chunks/framework.CRyszoVz.js";const B=JSON.parse('{"title":"Molang into Scoreboard","description":"Turn MoLang variable value into scoreboard value.","frontmatter":{"title":"Molang into Scoreboard","mentions":["SirLich","MedicalJewel105","shanewolf38","Luthorius","TheItsNameless","ThomasOrs"],"description":"Turn MoLang variable value into scoreboard value."},"headers":[],"relativePath":"animation-controllers/molang-into-scoreboard.md","filePath":"animation-controllers/molang-into-scoreboard.md","lastUpdated":1724353434000}'),r={name:"animation-controllers/molang-into-scoreboard.md"},o=s("p",null,[i("The following provides a method to read any Molang (variable, query, etc.) into a score instantly. Ensure that the animation name called in the controllers "),s("code",null,"convert"),i(" state matches the name of the animation (animation.namespace.molang_to_score) as defined in the entity.")],-1),E=s("p",null,[s("strong",null,"NOTE:"),i(" These two commands must be run in the world as part of the setup: "),s("code",null,"/scoreboard objectives add MoLang dummy"),s("code",null,'/scoreboard players set "#10" MoLang 10')],-1),d=l("",1),F=l("",3);function g(u,c,y,C,b,q){const a=p("CodeHeader");return k(),h("div",null,[o,E,n(a,null,{default:t(()=>[i("BP/animation_controllers/molang_to_score.animation_controllers.json")]),_:1}),d,n(a,null,{default:t(()=>[i("BP/animations/molang_to_score.animation.json")]),_:1}),F])}const _=e(r,[["render",g]]);export{B as __pageData,_ as default};
