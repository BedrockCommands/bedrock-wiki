import{_ as t,c as a,a as n,P as i,U as e,r,o as l,T as o}from"./chunks/framework.Dhk1h2hq.js";const g=JSON.parse(`{"title":"textures_list.json","description":"The textures_list file is Minecraft's way of caching each texture so that it can retrieve it faster than looking through each image in your textures folder.","frontmatter":{"title":"textures_list.json","mentions":["SirLich","solvedDev","Joelant05","AFoxyToast","TheItsNameless"],"description":"The textures_list file is Minecraft's way of caching each texture so that it can retrieve it faster than looking through each image in your textures folder."},"headers":[],"relativePath":"concepts/textures-list.md","filePath":"concepts/textures-list.md","lastUpdated":1724417565000}`),h={name:"concepts/textures-list.md"},u=e('<h2 id="general-overview" tabindex="-1">General Overview <a class="header-anchor" href="#general-overview" aria-label="Permalink to &quot;General Overview&quot;">​</a></h2><p>The <code>textures_list</code> file is Minecraft&#39;s way of <em>caching</em> each texture so that it can retrieve it faster than looking through each image in your textures folder. This is especially important when you have an abundance of textures, where Minecraft could potentially mess up and swap textures or even not load them at all. Minecraft tends to throw a content log <em>warning</em> if you don&#39;t have the textures listed in the file. You can ignore it if you have a small amount, but it is recommended that you list the textures anyway.</p><h2 id="what-textures-can-be-used-in-the-file" tabindex="-1">What textures can be used in the file? <a class="header-anchor" href="#what-textures-can-be-used-in-the-file" aria-label="Permalink to &quot;What textures can be used in the file?&quot;">​</a></h2><p>Any texture! Any textures can and <em>should</em> be used in the textures_list.json file for best practice and performance.</p><h2 id="file-structure" tabindex="-1">File Structure <a class="header-anchor" href="#file-structure" aria-label="Permalink to &quot;File Structure&quot;">​</a></h2><p>The structure is simple. The file itself is in <code>RP/textures</code> and is named <code>textures_list.json</code>. The file includes the file path to every texture you want in the file:</p>',6),p=e(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;textures/blocks/foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;textures/blocks/bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;textures/items/foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;textures/items/bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;textures/models/foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;textures/models/bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;textures/entity/foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;textures/entity/bar&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="automating" tabindex="-1">Automating <a class="header-anchor" href="#automating" aria-label="Permalink to &quot;Automating&quot;">​</a></h2><p>If you have a lot of textures, this could obviously be tedious to go and list all the texture paths. In this case you can start to use <a href="https://bedrock-oss.github.io/regolith/" target="_blank" rel="noreferrer">Regolith</a> with its wonderful filters.</p>`,3);function c(d,k,m,b,f,x){const s=r("CodeHeader");return l(),a("div",null,[u,n(s,null,{default:i(()=>[o("RP/textures/textures_list.json")]),_:1}),p])}const E=t(h,[["render",c]]);export{g as __pageData,E as default};
