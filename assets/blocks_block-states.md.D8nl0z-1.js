import{_ as l,E as p,j as h,k as r,a5 as i,A as t,I as e,J as n}from"./chunks/framework.3Z9w-w8R.js";const b=JSON.parse('{"title":"Block States","description":"Block states allow your blocks to have variants, each with its own functionality and appearance through use of permutations.","frontmatter":{"title":"Block States","description":"Block states allow your blocks to have variants, each with its own functionality and appearance through use of permutations.","category":"General","nav_order":4,"license":true,"mentions":["QuazChick","SmokeyStack"]},"headers":[{"level":2,"title":"Defining States","slug":"defining-states","link":"#defining-states","children":[]},{"level":2,"title":"Getting State Values","slug":"getting-state-values","link":"#getting-state-values","children":[{"level":3,"title":"Molang Query Function","slug":"molang-query-function","link":"#molang-query-function","children":[]},{"level":3,"title":"Command Argument","slug":"command-argument","link":"#command-argument","children":[]},{"level":3,"title":"Script API","slug":"script-api","link":"#script-api","children":[]}]},{"level":2,"title":"Setting State Values","slug":"setting-state-values","link":"#setting-state-values","children":[{"level":3,"title":"Command Argument","slug":"command-argument-1","link":"#command-argument-1","children":[]},{"level":3,"title":"Script API","slug":"script-api-1","link":"#script-api-1","children":[]}]}],"relativePath":"blocks/block-states.md","filePath":"blocks/block-states.md"}'),k={name:"blocks/block-states.md"};function o(d,s,u,c,E,g){const a=p("CodeHeader");return r(),h("div",null,[s[6]||(s[6]=i('<div class="tip custom-block"><p class="custom-block-title">FORMAT &amp; MIN ENGINE VERSION <code>1.21.60</code></p><p>When working with block states, ensure that the <code>min_engine_version</code> in your pack manifest is <code>1.20.20</code> or higher.</p></div><p>Block states allow your blocks to have variants, each with its own functionality and appearance through use of <a href="/blocks/block-permutations">permutations</a>.</p><h2 id="defining-states" tabindex="-1">Defining States <a class="header-anchor" href="#defining-states" aria-label="Permalink to &quot;Defining States&quot;">​</a></h2><p>Valid state values can be defined as a boolean, integer or string array - or as an integer range by using an object. The first item in the values array is used as the default.</p><p>Each state may have up to 16 valid values defined. For integer range states, this means that the <code>max</code> value cannot be more than 15 higher than the <code>min</code> value.</p><p><em>Released from experiment <code>Holiday Creator Features</code> for format versions 1.19.70 and higher.</em></p>',6)),t(a,null,{default:e(()=>s[0]||(s[0]=[n("BP/blocks/custom_block.json")])),_:1}),s[7]||(s[7]=i(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;format_version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.21.60&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;minecraft:block&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:custom_block&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;states&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;wiki:string_state_example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;green&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;wiki:boolean_state_example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;wiki:integer_state_example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;wiki:integer_range_state_example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;values&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;min&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;max&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The same as [0, 1, 2, 3, 4, 5]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;permutations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="getting-state-values" tabindex="-1">Getting State Values <a class="header-anchor" href="#getting-state-values" aria-label="Permalink to &quot;Getting State Values&quot;">​</a></h2><p>Listed below are ways to get the current value of block states in different contexts.</p><h3 id="molang-query-function" tabindex="-1">Molang Query Function <a class="header-anchor" href="#molang-query-function" aria-label="Permalink to &quot;Molang Query Function&quot;">​</a></h3><p>State values are returned by the <code>block_state</code> query function.</p>`,5)),t(a,null,{default:e(()=>s[1]||(s[1]=[n("Molang Expression")])),_:1}),s[8]||(s[8]=i('<div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">q.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">block_state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wiki:string_state_example&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;blue&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="command-argument" tabindex="-1">Command Argument <a class="header-anchor" href="#command-argument" aria-label="Permalink to &quot;Command Argument&quot;">​</a></h3><p>The <a href="/commands/block-states">block states argument</a> is included in commands such as <code>execute</code> and <code>testforblock</code>, and can be used to check the value of block states.</p>',3)),t(a,null,{default:e(()=>s[2]||(s[2]=[n("Command")])),_:1}),s[9]||(s[9]=i('<div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">execute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> block </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~~~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wiki:</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">custom_block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:string_state_example&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:integer_state_example&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] run kill</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="script-api" tabindex="-1">Script API <a class="header-anchor" href="#script-api" aria-label="Permalink to &quot;Script API&quot;">​</a></h3><p>The <a href="https://learn.microsoft.com/minecraft/creator/scriptapi/minecraft/server/blockpermutation#getstate" target="_blank" rel="noreferrer"><code>BlockPermutation.getState()</code></a> method allows you to get the current value of different states.</p>',3)),t(a,null,{default:e(()=>s[3]||(s[3]=[n("Script")])),_:1}),s[10]||(s[10]=i('<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">customBlock.permutation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:integer_state_example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="setting-state-values" tabindex="-1">Setting State Values <a class="header-anchor" href="#setting-state-values" aria-label="Permalink to &quot;Setting State Values&quot;">​</a></h2><h3 id="command-argument-1" tabindex="-1">Command Argument <a class="header-anchor" href="#command-argument-1" aria-label="Permalink to &quot;Command Argument&quot;">​</a></h3><p>The <a href="/commands/block-states">block states argument</a> is included in commands such as <code>setblock</code> and <code>fill</code>, and can be used to change states away from their default values.</p>',4)),t(a,null,{default:e(()=>s[4]||(s[4]=[n("Command")])),_:1}),s[11]||(s[11]=i('<div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setblock </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~~~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wiki:</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">custom_block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:string_state_example&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:integer_state_example&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="script-api-1" tabindex="-1">Script API <a class="header-anchor" href="#script-api-1" aria-label="Permalink to &quot;Script API&quot;">​</a></h3><p>The <a href="https://learn.microsoft.com/minecraft/creator/scriptapi/minecraft/server/blockpermutation#withstate" target="_blank" rel="noreferrer"><code>BlockPermutation.withState()</code></a> method returns a new block permutation with the specified state value changed. This permutation can be applied to the block using the <a href="https://learn.microsoft.com/minecraft/creator/scriptapi/minecraft/server/block#setpermutation" target="_blank" rel="noreferrer"><code>Block.setPermutation()</code></a> method, as seen below.</p>',3)),t(a,null,{default:e(()=>s[5]||(s[5]=[n("Script")])),_:1}),s[12]||(s[12]=i('<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">customBlock.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPermutation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(customBlock.permutation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:boolean_state_example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',1))])}const y=l(k,[["render",o]]);export{b as __pageData,y as default};
