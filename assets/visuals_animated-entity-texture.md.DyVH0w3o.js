import{_ as h,E as r,j as u,k,l as a,A as t,a5 as i,J as s,I as n}from"./chunks/framework.3Z9w-w8R.js";const m="/assets/images/visuals/animated-entity-texture/result.gif",w=JSON.parse('{"title":"Entity Texture Animation","description":"Learn how to make an animated texture for an entity that works similarly to flipbook texture for blocks.","frontmatter":{"title":"Entity Texture Animation","description":"Learn how to make an animated texture for an entity that works similarly to flipbook texture for blocks.","category":"Tutorials","mentions":["MedicalJewel105","IlkinQafarov","TheItsNameless","SmokeyStack","QuazChick"],"tags":["intermediate"]},"headers":[{"level":2,"title":"Source","slug":"source","link":"#source","children":[]},{"level":2,"title":"Textures","slug":"textures","link":"#textures","children":[]},{"level":2,"title":"Animated Material","slug":"animated-material","link":"#animated-material","children":[{"level":3,"title":"Creating the Material","slug":"creating-the-material","link":"#creating-the-material","children":[]},{"level":3,"title":"Applying the Material","slug":"applying-the-material","link":"#applying-the-material","children":[]}]},{"level":2,"title":"Render Controller","slug":"render-controller","link":"#render-controller","children":[]},{"level":2,"title":"Result","slug":"result","link":"#result","children":[]},{"level":2,"title":"Download Example Pack","slug":"download-example-pack","link":"#download-example-pack","children":[]}],"relativePath":"visuals/animated-entity-texture.md","filePath":"visuals/animated-entity-texture.md"}'),c={name:"visuals/animated-entity-texture.md"};function E(g,e,b,y,f,_){const p=r("YouTubeEmbed"),d=r("WikiImage"),l=r("CodeHeader"),o=r("Button");return k(),u("div",null,[e[5]||(e[5]=a("p",null,"From this page you will learn how to make an animated texture for an entity that works similarly to flipbook texture for blocks.",-1)),e[6]||(e[6]=a("h2",{id:"source",tabindex:"-1"},[s("Source "),a("a",{class:"header-anchor",href:"#source","aria-label":'Permalink to "Source"'},"​")],-1)),e[7]||(e[7]=a("p",null,[s("This page is based on content by "),a("a",{href:"https://www.youtube.com/channel/UC-ljddYkFdTQl-MVEaVvbuQ",target:"_blank",rel:"noreferrer"},"AgentMindStorm"),s(".")],-1)),t(p,{id:"F6e-w1rCEi4"}),e[8]||(e[8]=a("h2",{id:"textures",tabindex:"-1"},[s("Textures "),a("a",{class:"header-anchor",href:"#textures","aria-label":'Permalink to "Textures"'},"​")],-1)),e[9]||(e[9]=a("p",null,"First let's draw some new texture frames for our entity. In this tutorial it will be a cow, which is looking around.",-1)),t(d,{src:"/assets/images/visuals/animated-entity-texture/cow.png",alt:"Frames of an animated cow texture stacked on top of each other",width:"180",pixelated:""}),e[10]||(e[10]=i('<p>We need to place our textures vertically, like for blocks in flipbook textures. In this case we have 4 frames.</p><h2 id="animated-material" tabindex="-1">Animated Material <a class="header-anchor" href="#animated-material" aria-label="Permalink to &quot;Animated Material&quot;">​</a></h2><h3 id="creating-the-material" tabindex="-1">Creating the Material <a class="header-anchor" href="#creating-the-material" aria-label="Permalink to &quot;Creating the Material&quot;">​</a></h3><p>We will need to modify materials in this guide. However due to render dragon materials became outdated, so <strong>use it at your own risk</strong>.</p><p>To use animated texture, we need to change the entity material to one, that has <code>USE_UV_ANIM</code> property. Let&#39;s simply add a new material:</p>',5)),t(l,null,{default:n(()=>e[0]||(e[0]=[s("RP/materials/entity.material")])),_:1}),e[11]||(e[11]=i(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;materials&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;custom_animated:entity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;+defines&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;USE_UV_ANIM&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Or you can add this to existing ones, check default material file.</p>`,2)),t(l),e[12]||(e[12]=i(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;+defines&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;USE_UV_ANIM&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,1)),t(o,{link:"/assets/packs/visuals/animated-entity-texture/entity.material",download:""},{default:n(()=>e[1]||(e[1]=[s(" Download default entity.material file ")])),_:1}),e[13]||(e[13]=a("div",{class:"warning custom-block"},[a("p",{class:"custom-block-title"},"WARNING"),a("p",null,"It is not that easy for every entity! Some entities have multiple materials and if you want to make its texture animated, you will need to add this property to all materials of this entity.")],-1)),e[14]||(e[14]=a("h3",{id:"applying-the-material",tabindex:"-1"},[s("Applying the Material "),a("a",{class:"header-anchor",href:"#applying-the-material","aria-label":'Permalink to "Applying the Material"'},"​")],-1)),e[15]||(e[15]=a("p",null,"Before we go next, we need to define a new material in our client entity file.",-1)),t(l,null,{default:n(()=>e[2]||(e[2]=[s("minecraft:client_entity > description")])),_:1}),e[16]||(e[16]=i(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;materials&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	&quot;default&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;custom_animated&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="render-controller" tabindex="-1">Render Controller <a class="header-anchor" href="#render-controller" aria-label="Permalink to &quot;Render Controller&quot;">​</a></h2><p>After that all, we need to edit a render controller.</p><p>Here we will add <code>uv_anim</code> component with offset and scale properties:</p>`,4)),t(l,null,{default:n(()=>e[3]||(e[3]=[s("RP/render_controllers/cow.render_controllers.json > controller.render.cow")])),_:1}),e[17]||(e[17]=i(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uv_anim&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;offset&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;math.mod(math.floor(q.life_time * frames_per_second), frame_count) / frame_count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;scale&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1 / frame_count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>…where <code>frames_per_second</code> is a count of frames you want to change in one second and <code>frame_count</code> is a total frame count. This formula calculates the offset and the size of the texture depending on life time.</p><h2 id="result" tabindex="-1">Result <a class="header-anchor" href="#result" aria-label="Permalink to &quot;Result&quot;">​</a></h2><p>Now, it is time to test your creation!</p><p><img src="`+m+'" alt=""></p><h2 id="download-example-pack" tabindex="-1">Download Example Pack <a class="header-anchor" href="#download-example-pack" aria-label="Permalink to &quot;Download Example Pack&quot;">​</a></h2>',6)),t(o,{link:"https://github.com/Bedrock-OSS/wiki-addon/releases/download/download/animated_entity_texture.mcpack"},{default:n(()=>e[4]||(e[4]=[s(" Download MCPACK ")])),_:1})])}const x=h(c,[["render",E]]);export{w as __pageData,x as default};
