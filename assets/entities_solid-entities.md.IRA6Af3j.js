import{_ as o,c as r,a as i,P as e,U as s,r as t,o as h,T as n}from"./chunks/framework.1NWWyvDe.js";const q=JSON.parse('{"title":"Solid Entities","description":"Solid entities are entities that the player can bump into, step on, or otherwise physically interact with without passing through.","frontmatter":{"title":"Solid Entities","category":"Tutorials","tags":["recipe","intermediate"],"mentions":["SirLich","Joelant05","Chikorita-Lover","Luthorius","MedicalJewel105","ThomasOrs"],"description":"Solid entities are entities that the player can bump into, step on, or otherwise physically interact with without passing through."},"headers":[],"relativePath":"entities/solid-entities.md","filePath":"entities/solid-entities.md","lastUpdated":1724370595000}'),p={name:"entities/solid-entities.md"},c=s('<p>Solid entities are entities that the player can bump into, step on, or otherwise physically interact with without passing through. Entities like this have many uses, such as emulating blocks.</p><p>This page will discuss some of the ways that solid entities can be created.</p><p>Not all techniques are ideal for all scenarios. Experiment, and figure out what works best for you.</p><h2 id="runtime-identifiers" tabindex="-1">Runtime Identifiers <a class="header-anchor" href="#runtime-identifiers" aria-label="Permalink to &quot;Runtime Identifiers&quot;">​</a></h2><p><a href="/entities/runtime-identifier.html">Runtime identifiers</a> can be used to achieve solid entities, but currently only 2, each with a specific shape, and their own side effects. Neither collision shapes are possible to change or scale.</p><h3 id="boat" tabindex="-1">Boat <a class="header-anchor" href="#boat" aria-label="Permalink to &quot;Boat&quot;">​</a></h3>',6),d=s(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;format_version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.16.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;minecraft:entity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:solid_entity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;runtime_identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:boat&quot;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">       .</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> .</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> .</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>Boat-shaped solid collision</li><li>Certain other boat-like effects</li></ul><h3 id="shulker" tabindex="-1">Shulker <a class="header-anchor" href="#shulker" aria-label="Permalink to &quot;Shulker&quot;">​</a></h3>`,3),k=s(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;format_version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.16.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;minecraft:entity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:solid_entity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;runtime_identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:shulker&quot;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">       .</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> .</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> .</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>1x1 block sized solid collision.</li><li>Sticks to block grid.</li><li>Teleports randomly when supporting block removed.</li></ul><h2 id="minecraft-is-stackable" tabindex="-1">minecraft:is_stackable <a class="header-anchor" href="#minecraft-is-stackable" aria-label="Permalink to &quot;minecraft:is_stackable&quot;">​</a></h2><p>Add <code>minecraft:is_stackable</code> to your entity you want to be treated as being solid. <strong>Note:</strong> This requires editing <code>player.json</code> if you wish the entity to be solid for the player.</p><p><code>&quot;minecraft:is_stackable&quot;: {}</code></p><p>You will also need to add <code>minecraft:push_through</code> and set its <code>value</code> parameter to 1.</p><p><code>&quot;minecraft:push_through&quot;: 1</code></p><p>(they should both go in <code>components</code>)</p><h2 id="faking-it-with-blocks" tabindex="-1">Faking it with blocks <a class="header-anchor" href="#faking-it-with-blocks" aria-label="Permalink to &quot;Faking it with blocks&quot;">​</a></h2><p>In some scenarios, it&#39;s probably better to <code>/setblock</code> or <code>/fill</code> to place barrier blocks, either statically or dynamically. There needs to be both a way of placing the barriers, and removing them.</p><p><code>/fill ~ ~ ~ ~ ~1 ~ barrier 0 replace air</code> Places barriers in a 1x1x2 area.</p><p><code>/fill ~1 ~1 ~1 ~-1 ~-1 ~-1 air 0 replace barrier</code> Removes barriers within a 3x3x3 area.</p><p>These <a href="/animation-controllers/entity-commands.html">commands</a> will have to be triggering at a constant rate, for consistency. They can either be triggered through entity components, or animation controllers.</p><h2 id="commands-method" tabindex="-1">Commands Method <a class="header-anchor" href="#commands-method" aria-label="Permalink to &quot;Commands Method&quot;">​</a></h2><p>This method, developed by Reddit user <a href="https://www.reddit.com/user/Maxed_Out10/" target="_blank" rel="noreferrer">u/Maxed_Out10</a> allows you to create near-perfect entity replications of any Minecraft block using armour stands and some sequential <code>/playanimation</code> commands.</p>`,15);function u(m,b,E,y,g,f){const a=t("CodeHeader"),l=t("BButton");return h(),r("div",null,[c,i(a,null,{default:e(()=>[n("BP/entities/entity_name.json")]),_:1}),d,i(a,null,{default:e(()=>[n("BP/entities/entity_name.json")]),_:1}),k,i(l,{link:"/commands/block-entities",color:"blue"})])}const F=o(p,[["render",u]]);export{q as __pageData,F as default};
