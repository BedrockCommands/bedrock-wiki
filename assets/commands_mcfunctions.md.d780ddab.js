import{_ as s,c as a,a as n,w as c,e,r as t,o as l,d as r}from"./404.md.9313d9eb.js";const v=JSON.parse('{"title":"Functions","description":"","frontmatter":{"title":"Functions","category":"General","mentions":["Bedrock Commands","cda94581"],"nav_order":3,"tags":["info"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Function Pack Folder Structure","slug":"function-pack-folder-structure","link":"#function-pack-folder-structure","children":[]},{"level":2,"title":"Guidance","slug":"guidance","link":"#guidance","children":[]},{"level":2,"title":"Creating a Function","slug":"creating-a-function","link":"#creating-a-function","children":[]},{"level":2,"title":"Execution","slug":"execution","link":"#execution","children":[]},{"level":2,"title":"tick.json","slug":"tick-json","link":"#tick-json","children":[]},{"level":2,"title":"Known Issues","slug":"known-issues","link":"#known-issues","children":[]},{"level":2,"title":"Troubleshooting Functions","slug":"troubleshooting-functions","link":"#troubleshooting-functions","children":[]}],"relativePath":"commands/mcfunctions.md"}'),u={name:"commands/mcfunctions.md"},d=e('<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p>Functions are <code>.mcfunction</code> files which contain multiple lines of commands. They are run with the <code>/function</code> command in-game.</p><p>Functions are created in a <strong>Behavior Pack</strong>, nested within the <strong>functions</strong> folder. A function pack creates a system using solely function files.</p><h2 id="function-pack-folder-structure" tabindex="-1">Function Pack Folder Structure <a class="header-anchor" href="#function-pack-folder-structure" aria-hidden="true">#</a></h2>',4),h=e('<h2 id="guidance" tabindex="-1">Guidance <a class="header-anchor" href="#guidance" aria-hidden="true">#</a></h2><p>Each new line in a function file represents a new command. You may start a line with # to add comments. Commands in a function do not need to begin with a slash <code>/</code>, however doing so will not cause any errors.</p><p>All commands in a function are run in the <em>same tick</em>. Because of this, a function which causes large changes may cause a sudden lag spike and it is helpful to delegate some commands across multiple ticks, if possible. Commands in a function are still run in the same order, however.</p><p>It is not possible to run conditional commands. Those will still need to utilize command blocks in some way, or could utilize the 1.19.50 execute syntax.</p><p>Running commands with a specified delay is difficult, but not entirely impossible. Setting a tick delay would involve using Command Timers to incrementally count up every tick (to a certain point), and executing at certain scores along the file.</p><h2 id="creating-a-function" tabindex="-1">Creating a Function <a class="header-anchor" href="#creating-a-function" aria-hidden="true">#</a></h2><ol><li>Locate the com.mojang folder and navigate to development_behavior_packs</li></ol><blockquote><p>The development folders are used for quick reloading of packs, as the packs aren&#39;t cached to a specified world.</p></blockquote><ol start="2"><li><p>Create a folder (of any name) for the function pack. This will be referred to as Behavior Pack or BP.</p></li><li><p>Create a functions folder. Any file within this folder that ends with .mcfunction will be registered as a function in-game, which can be run with <code>/function &lt;function_name&gt;</code>.</p></li></ol><p>Nested functions are allowed, simply list the file path in relation to the functions folder as shown in the function pack folder structure.</p><p>Apply the behavior pack in-game and try out the functions. Function file changes can be reflected in the world by running <code>/reload</code> or by simply relogging.</p><blockquote><p>Note that functions are versioned; they will run in the version listed in the manifest.json</p></blockquote><h2 id="execution" tabindex="-1">Execution <a class="header-anchor" href="#execution" aria-hidden="true">#</a></h2><p>Functions can be executed in-game by typing <code>/function name_of_function</code>. This will execute all the commands in the function file, all in a single tick.</p><p>Nested functions, for example <code>BP/functions/folder/function1.mcfunction</code> can be run using the nested folder path, in this case <code>/function folder/function1</code></p><h2 id="tick-json" tabindex="-1">tick.json <a class="header-anchor" href="#tick-json" aria-hidden="true">#</a></h2><p>The final file within a function is the <strong>tick.json</strong> file. This specifies functions to run server-side on every game tick, (similar to a repeating command block.) It is located in the <code>BP/functions</code> folder.</p>',17),f=e(`<div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;values&quot;: [</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;function_1&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;function_2&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>Be aware that functions in this file are run as soon as the world is <em>initialized</em>, regardless of whether or not the player has been <em>loaded</em>. This may cause unintended behavior if used incorrectly.</p></blockquote><p>Functions are useful in many ways to reduce the time spent going from command block to command block debugging a system. They also help with packaging systems for use in multiple worlds and provide many functions that can change how everything works.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Minecraft can <strong>not</strong> run more than 10,000 lines of functions in one function file. This includes any other function files that are executed inside of the original file.</p></div><h2 id="known-issues" tabindex="-1">Known Issues <a class="header-anchor" href="#known-issues" aria-hidden="true">#</a></h2><p>While <code>tick.json</code> is a valuable file when you&#39;re trying to stray away from using repeating command blocks in-game, it may execute function files before the world has fully loaded in. This might cause unintended command behavior.</p><h2 id="troubleshooting-functions" tabindex="-1">Troubleshooting Functions <a class="header-anchor" href="#troubleshooting-functions" aria-hidden="true">#</a></h2><p>Your functions may not appear within the command suggestions when using <code>/function</code>. This is normally due to an error with one or more commands within the function. It is useful to enable <a href="https://wiki.bedrock.dev/guide/troubleshooting.html#content-log" target="_blank" rel="noreferrer">content log errors</a> to easily find these issues.</p>`,8);function p(m,g,b,k,_,w){const o=t("FolderView"),i=t("CodeHeader");return l(),a("div",null,[d,n(o,{paths:["BP","BP/functions","BP/functions/thiscode.mcfunction","BP/functions/moreofthiscode.mcfunction","BP/functions/tick.json","BP/functions/nested","BP/functions/nested/thiscodeisnested.mcfunction"]},null,8,["paths"]),h,n(i,null,{default:c(()=>[r("BP/functions/tick.json")]),_:1}),f])}const T=s(u,[["render",p]]);export{v as __pageData,T as default};
