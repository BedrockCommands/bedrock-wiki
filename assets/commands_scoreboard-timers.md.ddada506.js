import{_ as o,c as i,a as n,w as a,e,r,o as c,d as l}from"./404.md.331f3c96.js";const t="/assets/images/commands/commandBlockChain/8.png",p="/assets/images/commands/longDivision.png",D=JSON.parse('{"title":"Scoreboard Timers","description":"","frontmatter":{"title":"Scoreboard Timers","category":"Scoreboard Systems","mention":["BedrockCommands","zheaEvyline"],"nav_order":5,"tags":["system","intermediate"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"System","slug":"system","link":"#system","children":[]},{"level":2,"title":"Explanation","slug":"explanation","link":"#explanation","children":[]},{"level":2,"title":"Defining Events With Limited Intervals","slug":"defining-events-with-limited-intervals","link":"#defining-events-with-limited-intervals","children":[]}],"relativePath":"commands/scoreboard-timers.md"}'),d={name:"commands/scoreboard-timers.md"},m=e('<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p><a href="https://discord.gg/SYstTYx5G5" target="_blank" rel="noreferrer">Sourced By Bedrock Commands Community Discord</a></p><p>This system allows you to run your desired commands at specific intervals with any amount of delay you that wish to add.</p><ul><li><strong>Some Examples:</strong><ul><li>Sending a message in chat every 2 hours.</li><li>Running a &#39;lag clear&#39; function every 10 minutes.</li><li>Effecting players with &#39;speed&#39; every 30 seconds.</li></ul></li></ul><p>This system is especially useful when you need to set up multiple timers on your world. When working with command blocks, you may use the <a href="https://wiki.bedrock.dev/commands/intro-to-command-blocks.html#command-block-tick-delay" target="_blank" rel="noreferrer">Tick Delay</a> option to delay the time taken for your commands to run. However, when working with functions you will need to use a system like this.</p><p>It is recommended to use this system while working with command blocks, as well if you wish to run all your timers in sync with one another. ie. with the same start time.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h2><p><em>To be typed in chat:</em></p>',8),u=e(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki"><code><span class="line"><span style="color:#C3E88D;">/scoreboard objectives add ticks dummy</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard objectives add events dummy</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Once you have created these two objectives, you will need to define the interval for each repeating event you need on your world in the <code>ticks</code> objective.</p><p>To do that, first you must know that <strong>1 second is approximately 20 game ticks in Minecraft</strong>. Based on this knowledge, you will need to do some basic calculations to obtain the ticks equivalent for each interval you want to define.</p>`,3),h=e(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 2h = 20(t) \xD7 60(s) \xD7 60(m) \xD7 2(h) = 144000t</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players set 20m ticks 144000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#10m = 20(t) \xD7 60(s) \xD7 10(m) = 12000t</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players set 10m ticks 12000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#30s = 20(t) \xD7 30(s) = 600t</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players set 30s ticks 600</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>We will now use this scoreboard data to make our timers function.</p><h2 id="system" tabindex="-1">System <a class="header-anchor" href="#system" aria-hidden="true">#</a></h2>`,3),b=e(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki"><code><span class="line"><span style="color:#C3E88D;">/scoreboard players add timer ticks 1</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players operation * events = timer ticks</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#Chat Message (every 2h)</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players operation chatMessage events %= 2h ticks</span></span>
<span class="line"><span style="color:#C3E88D;">/execute if score chatMessage events matches 0 run say Technoblade never dies!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#Lag Clear (every 10m)</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players operation lagClear events %= 10m ticks</span></span>
<span class="line"><span style="color:#C3E88D;">/execute if score lagClear events matches 0 run function clear_lag</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#Speed Effect (every 30s)</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players operation speedEffect events %= 30s ticks</span></span>
<span class="line"><span style="color:#C3E88D;">/execute if score speedEffect events matches 0 run effect @a speed 10 2 true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="`+t+'" alt="commandBlockChain8"></p><p>Here we have taken 3 examples to give you an idea on how to do it but you can add any timer you need and as many as you require.</p><p>Just make sure to follow the given order and properly use the <code>/execute if score</code> command as shown to run the commands you need.</p><h2 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-hidden="true">#</a></h2><ul><li><p><strong><code>events</code></strong> on this objective we label all the repeating events we want on our world.</p><ul><li><code>chatMessage</code></li><li><code>lagClear</code></li><li><code>speedEffect</code></li></ul></li><li><p><strong><code>ticks</code></strong> on this objective we define all the intervals for our events and also run our scoreboard timer.</p><ul><li><code> 2h</code> interval (static score 144000)</li><li><code>10m</code> interval (static score 12000)</li><li><code>30s</code> interval (static score 600)</li><li><code>timer</code> clock (variable score n+1)</li></ul></li><li><p><strong>Command 1:</strong> this command adds +1 score every tick to FakePlayer name <code>timer</code> indicating a tick has passed in the game. This is basically our scoreboard timer/clock which we will use for all the repeating events on our world.</p></li><li><p><strong>Command 2:</strong> here we copy <code>timer</code> score to all our events using the <code>*</code> wildcard selector. This will allow us to perform operations to determine if the interval has been reached to run the commands for that particular event. Example:</p><ul><li>If <code>timer</code> score is 1200 that means 1200 game ticks have passed.</li><li>And this command makes it so all our events FakePlayer names: <code>chatMessage</code>, <code>lagClear</code>, <code>speedEffect</code> scores also 1200.</li></ul></li><li><p><strong>Command 3:</strong> we will use the <code>%=</code> modulo operation to check if our event score is divisible by it&#39;s corresponding interval. A number is said to be divisible when the remainder is 0.</p><ul><li>Chat Message: <code>1200/144000</code> Q=0, R=1200, <em>hence interval not reached.</em></li><li>Lag Clear: <code>1200/12000</code> Q=0, R=1200, <em>hence interval not reached.</em></li><li>Speed Effect: <code>1200/600</code> Q=2, R=0, <em>hence interval has reached and event commands can be executed.</em> Here we can note that the first 2 events are yet to happen but the 3rd event is happening for the second time.</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>In Minecraft; scoreboard division is only calculated up to whole numbers and decimal values are ignored. <img src="'+p+'" alt="longDivision"></p></div><ul><li><strong>Command 4:</strong> the remainder value obtained from the calculation is applied to the corresponding event FakePlayer name. Based on this knowledge we can run our command if it&#39;s score is equal to 0.</li></ul><p>The rest of the commands are identical in structure and only the event labels and interval values are changed.</p><h2 id="defining-events-with-limited-intervals" tabindex="-1">Defining Events With Limited Intervals <a class="header-anchor" href="#defining-events-with-limited-intervals" aria-hidden="true">#</a></h2><p>To limit how many times an event occurs, you will need to create a new objective called <code>intervals</code> and define how many times the event should occur like so:</p>',11),y=e(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki"><code><span class="line"><span style="color:#C3E88D;">/scoreboard objectives set chatMessage intervals 5</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard objectives set speedEffect intervals 10</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Once you have done that, modify your system from above like so:</p>`,2),v=e(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki"><code><span class="line"><span style="color:#C3E88D;">/scoreboard players add timer ticks 1</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players operation * events = timer ticks</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#Chat Message (every 10m)</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players operation chatMessage events %= 2h ticks</span></span>
<span class="line"><span style="color:#C3E88D;">/execute if score chatMessage events matches 0 if score chatMessage intervals matches 1.. run say Technoblade never dies!</span></span>
<span class="line"><span style="color:#C3E88D;">/execute if score chatMessage events matches 0 if score chatMessage intervals matches 1.. run scoreboard players remove chatMessage intervals 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#Speed Effect (every 30s)</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players operation speedEffect events %= 30s ticks</span></span>
<span class="line"><span style="color:#C3E88D;">/execute if score speedEffect events matches 0 if score speedEffect intervals matches 1.. run effect @a speed 10 2 true</span></span>
<span class="line"><span style="color:#C3E88D;">/execute if score speedEffect events matches 0 if score speedEffect intervals matches 1.. run scoreboard players remove speedEffect intervals 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><img src="`+t+'" alt="commandBlockChain8"></p>',2);function _(f,g,k,w,C,E){const s=r("CodeHeader");return c(),i("div",null,[m,n(s),u,n(s),h,n(s,null,{default:a(()=>[l("mcfunction")]),_:1}),b,n(s),y,n(s,null,{default:a(()=>[l("mcfunction")]),_:1}),v])}const S=o(d,[["render",_]]);export{D as __pageData,S as default};
