import{_ as l,e as p,t as a,C as n,f as t,E as s,Q as e,D as r,d as h}from"./chunks/framework.CuLWBCQE.js";const w=JSON.parse('{"title":"Entity Properties","description":"Entity properties allow data to be stored on entities without needing the use of components or attributes in the server-side of the entity, similar to block states.","frontmatter":{"title":"Entity Properties","description":"Entity properties allow data to be stored on entities without needing the use of components or attributes in the server-side of the entity, similar to block states.","category":"General","mentions":["SirLich","sermah","MedicalJewel105","Luthorius","stirante","TheItsNameless","SmokeyStack","QuazChick"]},"headers":[{"level":2,"title":"Defining Properties","slug":"defining-properties","link":"#defining-properties","children":[{"level":3,"title":"Default Value","slug":"default-value","link":"#default-value","children":[]},{"level":3,"title":"Client Sync","slug":"client-sync","link":"#client-sync","children":[]}]},{"level":2,"title":"Getting Property Values","slug":"getting-property-values","link":"#getting-property-values","children":[{"level":3,"title":"Molang Query Function","slug":"molang-query-function","link":"#molang-query-function","children":[]},{"level":3,"title":"Entity Filter Test","slug":"entity-filter-test","link":"#entity-filter-test","children":[]},{"level":3,"title":"Command Selector Parmeter","slug":"command-selector-parmeter","link":"#command-selector-parmeter","children":[]},{"level":3,"title":"Script API","slug":"script-api","link":"#script-api","children":[]}]},{"level":2,"title":"Setting Property Values","slug":"setting-property-values","link":"#setting-property-values","children":[{"level":3,"title":"Entity Event Response","slug":"entity-event-response","link":"#entity-event-response","children":[]},{"level":3,"title":"Script API","slug":"script-api-1","link":"#script-api-1","children":[]}]}],"relativePath":"entities/entity-properties.md","filePath":"entities/entity-properties.md"}'),k={name:"entities/entity-properties.md"},o=t("p",null,[s("Entity properties (also known as actor properties) allow data to be stored on entities without needing the use of components or attributes (such as "),t("code",null,"minecraft:variant"),s(") in the server-side of the entity, similar to block states.")],-1),d=t("h2",{id:"defining-properties",tabindex:"-1"},[s("Defining Properties "),t("a",{class:"header-anchor",href:"#defining-properties","aria-label":'Permalink to "Defining Properties"'},"â€‹")],-1),E=t("p",null,[s("Entity properties are defined in the BP entity's "),t("code",null,"description"),s(" object:")],-1),u=e("",4),c=e("",3),y=e("",2),g=e("",4),b=e("",2),m=e("",2),_=e("",3),F=e("",4),C=e("",3),q=e("",1);function v(f,B,T,P,S,x){const i=r("CodeHeader");return h(),p("div",null,[o,d,E,a(i,null,{default:n(()=>[s("BP/entities/properties_example.json")]),_:1}),u,a(i,null,{default:n(()=>[s("minecraft:entity > description > properties")]),_:1}),c,a(i,null,{default:n(()=>[s("minecraft:entity > description > properties")]),_:1}),y,a(i,null,{default:n(()=>[s("minecraft:client_entity > description")]),_:1}),g,a(i,null,{default:n(()=>[s("Molang Expression")]),_:1}),b,a(i,null,{default:n(()=>[s("Entity Filter")]),_:1}),m,a(i,null,{default:n(()=>[s("Command")]),_:1}),_,a(i,null,{default:n(()=>[s("Script")]),_:1}),F,a(i,null,{default:n(()=>[s("minecraft:entity > events")]),_:1}),C,a(i,null,{default:n(()=>[s("Script")]),_:1}),q])}const V=l(k,[["render",v]]);export{w as __pageData,V as default};
