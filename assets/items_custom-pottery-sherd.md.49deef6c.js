import{_ as t,c as a,a as n,w as o,e as s,r as l,o as p,d as r}from"./404.md.eebc8d69.js";const i="/assets/images/items/custom-pottery-sherd/crafting.png",f=JSON.parse('{"title":"Custom Pottery Sherds","description":"Learn how to make custom pottery sherds.","frontmatter":{"title":"Custom Pottery Sherds","description":"Learn how to make custom pottery sherds.","category":"Tutorials","mentions":["SmokeyStack"]},"headers":[{"level":2,"title":"Registering the Sherd","slug":"registering-the-sherd","link":"#registering-the-sherd","children":[]},{"level":2,"title":"Displaying the Sherd","slug":"displaying-the-sherd","link":"#displaying-the-sherd","children":[]}],"relativePath":"items/custom-pottery-sherd.md"}'),c={name:"items/custom-pottery-sherd.md"},d=s('<p>Minecraft Bedrock allows us to add custom pottery sherds. This article will cover how to create them.</p><h2 id="registering-the-sherd" tabindex="-1">Registering the Sherd <a class="header-anchor" href="#registering-the-sherd" aria-hidden="true">#</a></h2><p>Pottery Sherds are controlled by an item tag! Specifically the <code>&quot;minecraft:decorated_pot_sherds&quot;</code>. Simply add this tag to your existing item. If you don&#39;t know how to make a custom item, please refer to our <a href="/items/items-intro.html">guide</a>. If you do not know how to add item tags, please refer to this <a href="/items/item-tags.html">article</a>.</p><p>Now that we have registered our sherd, we can test it by putting the sherd in a crafting table. If you applied the tag correctly, the crafting table should output a deocrated pot!</p><p><img src="'+i+'" alt="Image of the crafting output"></p><p>However, the decorated pot still will not display the sherd itself. This is because we haven&#39;t told the decorated pot what image to display!</p><h2 id="displaying-the-sherd" tabindex="-1">Displaying the Sherd <a class="header-anchor" href="#displaying-the-sherd" aria-hidden="true">#</a></h2><p>To tell the game what image the sherd is supposed to display, we need to edit the decorated pot&#39;s client entity file. Add the following JSON file:</p>',8),h=s(`<div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">format_version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.8.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">minecraft:client_entity</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">identifier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">minecraft:decorated_pot</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">textures</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">custom_item</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path/to/the/display</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li><code>custom_item</code> is the identifier of your custom pottery sherd. Replace this with the identifier of your item.</li><li><code>path/to/the/display</code> refers to the path that points to your display. Since this is a reference path, you can point it to any image in the <code>textures</code> folder. Please note that decorated pots does not support transparency.</li></ul><p>If you&#39;ve done everything right, your decorated pot will now display the sherd you want instead of being a blank pot!</p><p><strong>Q: Won&#39;t editing the client entity file make my add-on incompatible?</strong></p><p><strong>A: It does not! Client entity files actually merge definitions together. So long your item identifier is unique, other add-ons won&#39;t override them! As a good practice, prefix your identifier with your namespace.</strong></p>`,5);function y(u,D,m,F,g,C){const e=l("CodeHeader");return p(),a("div",null,[d,n(e,null,{default:o(()=>[r("RP/entity/decorated_pot.json")]),_:1}),h])}const A=t(c,[["render",y]]);export{f as __pageData,A as default};
