import{_ as l,c as r,a as e,w as o,d as s,e as n,r as t,o as c}from"./404.md.56cf0ff1.js";const v=JSON.parse('{"title":"On First World Load","description":"","frontmatter":{"title":"On First World Load","category":"On Event Systems","mentions":["BedrockCommands","zheaEvyline","SmokeyStack","cda94581"],"nav_order":6,"tags":["system"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Tick Json","slug":"tick-json","link":"#tick-json","children":[]},{"level":2,"title":"System","slug":"system","link":"#system","children":[]},{"level":2,"title":"Explanation","slug":"explanation","link":"#explanation","children":[]},{"level":2,"title":"Folder Structure","slug":"folder-structure","link":"#folder-structure","children":[]}],"relativePath":"commands/on-first-world-load.md"}'),d={name:"commands/on-first-world-load.md"},p=n("",5),u=n("",2),m=n("",9);function h(y,b,_,f,w,C){const a=t("CodeHeader"),i=t("FolderView");return c(),r("div",null,[p,e(a,null,{default:o(()=>[s("BP/functions/tick.json")]),_:1}),u,e(a,null,{default:o(()=>[s("BP/functions/initialise.mcfunction")]),_:1}),m,e(i,{paths:["BP","BP/functions","BP/pack_icon.png","BP/manifest.json","BP/functions/initialise.mcfunction","BP/functions/tick.json"]},null,8,["paths"]),s(" ## notes on Compatibbility The Scoreboard names (world in this case) may end up being used by other people. appending and _ and a set of randomly generated characters after world would be a choice that reduces the probability of colisions. Similar techniques can be employed for the filenames in the .mcfunction files. ")])}const k=l(d,[["render",h]]);export{v as __pageData,k as default};
