import{_ as r,c,a as n,P as o,U as s,b as e,T as a,r as l,o as d,ar as p,aA as u}from"./chunks/framework.CiuNV1Mk.js";const T=JSON.parse('{"title":"On Player Leave","description":"This system will run your desired commands on the event that a player leaves the world.","frontmatter":{"title":"On Player Leave","category":"On Event Systems","mentions":["BedrockCommands","zheaEvyline"],"nav_order":3,"description":"This system will run your desired commands on the event that a player leaves the world."},"headers":[],"relativePath":"commands/on-player-leave.md","filePath":"commands/on-player-leave.md","lastUpdated":1724329154000}'),h={name:"commands/on-player-leave.md"},m=s('<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p><a href="https://discord.gg/SYstTYx5G5" target="_blank" rel="noreferrer">Sourced By Bedrock Commands Community Discord</a></p><p>This system will run your desired commands on the event that a player leaves the world.</p><blockquote><p><strong>Note:</strong> you cannot execute commands on the <em>players</em> that leave using selectors. However; you may use the <a href="/commands/on-player-join.html">On Player Join</a> system to execute when they join back.</p></blockquote><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><p><em>To be typed in Chat:</em></p><p><code>/scoreboard objectives add total dummy</code></p><p>If you prefer to have the objective added automatically on world initialisation, follow the process outlined in <a href="/commands/on-first-world-load.html">On First World Load.</a></p><h2 id="system" tabindex="-1">System <a class="header-anchor" href="#system" aria-label="Permalink to &quot;System&quot;">​</a></h2>',9),y=s(`<div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scoreboard players reset newPlayerCount total</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">execute as @a run scoreboard players add newPlayerCount total 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scoreboard players operation newPlayerCount total -= playerCount total</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Your Commands Here (example)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">execute if score newPlayerCount total matches ..-1 run say a player has left the world</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scoreboard players reset playerCount total</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">execute as @a run scoreboard players add playerCount total 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="`+p+'" alt="commandBlockChain6"></p><p>Here we have used a <strong><code>/say</code></strong> command as an example but you can use any command you prefer and as many as you require.</p><p>Just make sure to follow the given order and properly use the <code>/execute if score</code> command as shown to run the commands you need.</p><h2 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation&quot;">​</a></h2><ul><li><strong><code>newPlayerCount</code></strong> this FakePlayer name means the total number of players on the world in the current game tick.</li><li><strong><code>playerCount</code></strong> this FakePlayer name means the total number of players that were on the world in the previous game tick but also saves the total count to be used in the <em>next</em> game tick.</li></ul><p>The count is obtained using the <a href="/commands/entity-counter.html">Entity Counter</a> system. It may be beneficial to refer to that doc for better understanding this one.</p><p>By subtracting &#39;playerCount&#39; total from &#39;newPlayerCount&#39; total, we will be able to identify if the player count has:</p><ul><li>decreased <code>..-1</code></li><li>increased <code>1..</code></li><li>or if it&#39;s unchanged <code>0</code></li></ul><p>If it has decreased, we know that 1 or more players have left the game. Using this knowledge we can run our desired commands from &#39;newPlayerCount&#39; if it&#39;s score is -1 or less.</p><ul><li><p>ie, if there were 10 players and someone leaves:</p><ul><li>that is <code>newPlayerCount - playerCount</code></li><li>which is <code>9 - 10 = -1</code></li><li>hence, we will detect by <code>..-1</code></li></ul></li><li><p>The &#39;newPlayerCount&#39; total is obtained first, subtraction is performed after that to run your desired commands and lastly the &#39;playerCount&#39; total is obtained to be used in the next game tick.</p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>All commands involved in a command-block-chain or function will only run in a sequence one after the other but it all still happens in the same tick regardless of the number of commands involved. We are able to achieve this system due to the fact that commands run along the end of a game tick after all events such as player log in, log out, death, etc.. occur.</p><p><img src="'+u+'" alt="gametick"></p></div><h2 id="tick-json" tabindex="-1">Tick JSON <a class="header-anchor" href="#tick-json" aria-label="Permalink to &quot;Tick JSON&quot;">​</a></h2><p>If you are using functions instead of command blocks, the <code>on_player_leave</code> function must be added to the <code>tick.json</code> in order to loop and run it continuously. Multiple files can be added to the <code>tick.json</code> by placing a comma after each string. Refer to <a href="/commands/mcfunctions.html#tick-json">Functions</a> documentation for further info.</p>',14),b=s(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;values&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;on_player_leave&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>If using functions, your pack folder structure will be be as follows:</p>`,2),k=e("blockquote",null,[e("p",null,[e("strong",null,"Note:"),a(" the scoreboard names (in this case: 'total') may end up being used by other people. Appending "),e("code",null,"_"),a(" and a set of randomly generated characters after would be a choice that reduces the probability of collisions. Similar technique can be employed for the "),e("code",null,".mcfunction"),a(" filenames. Ex:")]),e("ul",null,[e("li",null,[e("code",null,"total_0fe678")]),e("li",null,[e("code",null,"on_player_leave_0fe678.mcfunction")])])],-1);function f(_,g,v,w,C,P){const t=l("CodeHeader"),i=l("FolderView");return d(),c("div",null,[m,n(t,null,{default:o(()=>[a("BP/functions/on_player_leave.mcfunction")]),_:1}),y,n(t,null,{default:o(()=>[a("BP/functions/tick.json")]),_:1}),b,n(i,{paths:["BP","BP/functions","BP/pack_icon.png","BP/manifest.json","BP/functions/on_player_leave.mcfunction","BP/functions/tick.json"]}),k])}const F=r(h,[["render",f]]);export{T as __pageData,F as default};
