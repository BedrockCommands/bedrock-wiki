import{_ as e,c as n,o as s,e as a}from"./404.md.7e75bafd.js";const y=JSON.parse('{"title":"On Join","description":"","frontmatter":{"title":"On Join","category":"On Event Systems","mention":["BedrockCommands","EziGotFliped"],"nav_order":2},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"System","slug":"system","link":"#system","children":[]},{"level":2,"title":"Explanation","slug":"explanation","link":"#explanation","children":[]}],"relativePath":"commands/on-join.md"}'),o={name:"commands/on-join.md"},r=a(`<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p>This system will run your desired commands on the event that a players joins the world.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h2><p><em>To be typed in chat:</em><br><code>/scoreboard objectives add joined dummy</code></p><h2 id="system" tabindex="-1">System <a class="header-anchor" href="#system" aria-hidden="true">#</a></h2><p><em>mcfunction / Command Line:</em></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">/scoreboard players add @a joined 0</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">#Your Commands Here (example)</span></span>
<span class="line"><span style="color:#A6ACCD;">/tp @a[scores={joined=0}] 0 65 0</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">/scoreboard players reset * joined</span></span>
<span class="line"><span style="color:#A6ACCD;">/scoreboard players set @a joined 1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="https://user-images.githubusercontent.com/99989764/214433884-f718e120-d7fd-47c5-8d0d-89328d02ca23.png" alt="export1674579202856"><br> Here we have used a <code>/tp</code> command as an example but you can use any command you prefer and as many as you require.<br> Just make sure to follow the given order and properly add the selector argument <code>scores={joined=0}</code> as shown for your desired commands.</p><h2 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-hidden="true">#</a></h2><p>When the player joins, a 0 is added to their objective, this allows us to run commands from them using the &#39;scores&#39; selector argument.<br> Immediately after the commands are run, we reset all the scores on the objective using wildcard <strong><code>*</code></strong> and only players who stayed online will have their score set to 1.<br> And this way, since our commands only target players with the score 0, the commands won&#39;t repeat again for the players who stayed unless they leave and rejoin or if we run:<br><code>/scoreboard players set &lt;player&gt; joined 0</code><br><br><br></p><p><a href="https://discord.gg/SYstTYx5G5" target="_blank" rel="noreferrer">Sourced By Bedrock Commands | Community &amp; Archive</a></p>`,11),t=[r];function l(i,d,c,p,m,h){return s(),n("div",null,t)}const b=e(o,[["render",l]]);export{y as __pageData,b as default};
