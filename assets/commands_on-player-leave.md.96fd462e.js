import{_ as r}from"./chunks/6.07d6a5aa.js";import{_ as i}from"./chunks/gametick.8221204e.js";import{_ as c,c as p,a as e,w as t,d as a,e as n,r as o,o as d}from"./404.md.fefb3dce.js";const x=JSON.parse('{"title":"On Player Leave","description":"","frontmatter":{"title":"On Player Leave","category":"On Event Systems","mentions":["BedrockCommands","zheaEvyline"],"nav_order":3,"tags":["system"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"System","slug":"system","link":"#system","children":[]},{"level":2,"title":"Explanation","slug":"explanation","link":"#explanation","children":[]},{"level":2,"title":"Tick Json","slug":"tick-json","link":"#tick-json","children":[]},{"level":2,"title":"Folder Structure","slug":"folder-structure","link":"#folder-structure","children":[]},{"level":2,"title":"Folder Structure","slug":"folder-structure-1","link":"#folder-structure-1","children":[]}],"relativePath":"commands/on-player-leave.md"}'),u={name:"commands/on-player-leave.md"},m=n('<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p><a href="https://discord.gg/SYstTYx5G5" target="_blank" rel="noreferrer">Sourced By Bedrock Commands Community Discord</a></p><p>This system will run your desired commands on the event that a player leaves the world.</p><blockquote><p>Note: you cannot execute commands on the <em>players</em> that leave using selectors. However; you may use the <a href="/commands/on-player-join.html">On Player Join</a> system to execute when they join back.</p></blockquote><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h2><p>The scoreboard alive must be initilaized for this to funtion. to initialize this automatically without the need to have a a player with command previlages, follow the process outlined in <a href="/commands/on-first-world-load.html">on first world load</a>.</p><p>If you prefer to initialize manually this can be completed using the following command: <code>/scoreboard objectives add total dummy</code></p><h2 id="system" tabindex="-1">System <a class="header-anchor" href="#system" aria-hidden="true">#</a></h2>',8),h=n(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki"><code><span class="line"><span style="color:#C3E88D;">scoreboard players reset new total</span></span>
<span class="line"><span style="color:#C3E88D;">execute as @a run scoreboard players add new total 1</span></span>
<span class="line"><span style="color:#C3E88D;">scoreboard players operation new total -= old total</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#Your Commands Here (example)</span></span>
<span class="line"><span style="color:#C3E88D;">execute if score new total matches ..-1 run say a player has left the world</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">scoreboard players reset old total</span></span>
<span class="line"><span style="color:#C3E88D;">execute as @a run scoreboard players add old total 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="`+r+'" alt="commandBlockChain6"></p><p>Here we have used a <strong><code>/say</code></strong> command as an example but you can use any command you prefer and as many as you require.</p><p>Just make sure to follow the given order and properly use the <code>/execute if score</code> command as shown to run the commands you need.</p><h2 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-hidden="true">#</a></h2><ul><li><strong><code>new</code></strong> this FakePlayer name means the total number of players on the world in the current game tick.</li><li><strong><code>old</code></strong> this FakePlayer name means the total number of players that were on the world in the previous game tick but also saves the values to be used in the <em>next</em> game tick.</li></ul><p>These values are obtained using the <a href="/commands/entity-counter.html">Entity Counter</a> system. It may be beneficial to refer to that doc for better understanding this one.</p><p>By subtracting &#39;old&#39; total from &#39;new&#39; total we will be able to identify if player count has:</p><ul><li>decreased <code>..-1</code></li><li>increased <code>1..</code></li><li>or if it&#39;s unchanged <code>0</code></li></ul><p>If it has decreased; we know that 1 or more players have left the game. With this knowledge we can run our desired commands from &#39;new&#39; if it&#39;s score is -1 or less.</p><ul><li><p>ie, if there were 10 players and someone leaves:</p><ul><li>that is <code>new - old</code></li><li>which is <code>9 - 10 = -1</code></li><li>hence we will detect by <code>..-1</code></li></ul></li><li><p>The &#39;new&#39; total value is obtained first, subtraction is performed after that to run your desired commands and lastly the &#39;old&#39; total value is obtained to be used in the next game tick.</p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>All commands involved in a command-block-chain or function will only run in a sequence one after the other but it all still happens in the same tick regardless of the number of commands involved. We are able to achieve this system due to the fact that commands run along the end of a game tick after all events such as player log in, log out, death etc.. occur.</p><p><img src="'+i+'" alt="gametick"></p></div><h2 id="tick-json" tabindex="-1">Tick Json <a class="header-anchor" href="#tick-json" aria-hidden="true">#</a></h2><p>To get this funtion to run in a loop contuously it must be added to tick.json or a command block. Multiple files can added to the tick.json by placing a ccommon after each string. See <a href="/commands/mcfunctions.html#tick-json">Functions</a> for more details.</p>',14),y=n(`<div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">values</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">on_player_leave</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="folder-structure" tabindex="-1">Folder Structure <a class="header-anchor" href="#folder-structure" aria-hidden="true">#</a></h2><p>The structure of this behavior pack would be as follows.</p><h2 id="folder-structure-1" tabindex="-1">Folder Structure <a class="header-anchor" href="#folder-structure-1" aria-hidden="true">#</a></h2>`,4);function b(f,_,v,g,k,w){const s=o("CodeHeader"),l=o("FolderView");return d(),p("div",null,[m,e(s,null,{default:t(()=>[a("BP/functions/on_player_leave.mcfunction")]),_:1}),h,e(s,null,{default:t(()=>[a("BP/functions/tick.json")]),_:1}),y,e(l,{paths:["BP","BP/functions","BP/pack_icon.png","BP/manifest.json","BP/functions/on_player_leave.mcfunction","BP/functions/tick.json"]},null,8,["paths"]),a(" ## notes on Compatibbility The Scoreboard names (total in this case) may end up being used by other people. appending and _ and a set of randomly generated characters after total would be a choice that reduces the probability of colisions. Similar techniques can be employed for the filenames in the .mcfunction files. ")])}const F=c(u,[["render",b]]);export{x as __pageData,F as default};
