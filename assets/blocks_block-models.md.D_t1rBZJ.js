import{_ as h,E as t,j as c,k,a5 as o,A as a,l as e,J as i,I as l}from"./chunks/framework.3Z9w-w8R.js";const u="/assets/images/blocks/block-models/new_project.png",g="/assets/images/blocks/block-models/project_settings.png",b="/assets/images/blocks/block-models/root_bone.png",m="/assets/images/blocks/block-models/select_edit_material_instances.png",E="/assets/images/blocks/block-models/edit_material_instances.png",x=JSON.parse(`{"title":"Creating Block Models","description":"Learn how to set up a custom model for your block.","frontmatter":{"title":"Creating Block Models","description":"Learn how to set up a custom model for your block.","category":"Tutorials","tags":["beginner","easy"],"license":true,"mentions":["QuazChick","SmokeyStack"]},"headers":[{"level":2,"title":"Model Setup","slug":"model-setup","link":"#model-setup","children":[]},{"level":2,"title":"Adding Cubes","slug":"adding-cubes","link":"#adding-cubes","children":[]},{"level":2,"title":"Removing Faces","slug":"removing-faces","link":"#removing-faces","children":[]},{"level":2,"title":"Previewing Textures","slug":"previewing-textures","link":"#previewing-textures","children":[]},{"level":2,"title":"Rearranging UVs","slug":"rearranging-uvs","link":"#rearranging-uvs","children":[]},{"level":2,"title":"Changing Material Instances","slug":"changing-material-instances","link":"#changing-material-instances","children":[]},{"level":2,"title":"Applying Geometry & Textures","slug":"applying-geometry-textures","link":"#applying-geometry-textures","children":[]},{"level":2,"title":"What's Next?","slug":"what-s-next","link":"#what-s-next","children":[]}],"relativePath":"blocks/block-models.md","filePath":"blocks/block-models.md"}`),y={name:"blocks/block-models.md"};function f(_,s,C,F,q,w){const n=t("WikiImage"),p=t("CodeHeader"),r=t("Card"),d=t("CardGrid");return k(),c("div",null,[s[6]||(s[6]=o('<p>Although custom blocks are unable to make use of vanilla <a href="/blocks/block-shapes">block shapes</a>, we can create our own models which follow a similar format to entity models. This tutorial will walk you through the process of creating a custom block model for a &quot;paper bag&quot; using <a href="https://blockbench.net" target="_blank" rel="noreferrer">Blockbench</a>. You should learn the main features of Minecraft geometry tailored towards creating custom blocks from this tutorial.</p><p><strong>NOTE:</strong> Custom block models must be within the <a href="/blocks/block-components#geometry">model size limits</a>.</p><h2 id="model-setup" tabindex="-1">Model Setup <a class="header-anchor" href="#model-setup" aria-label="Permalink to &quot;Model Setup&quot;">​</a></h2><p>Open Blockbench and create a new <code>Bedrock Block</code> project.</p><p><img src="'+u+'" alt="New project panel with Bedrock Block selected"></p><p>Now you can give your model an identifier! Your file name can be decided here, or changed later.</p><p>The UV mode and texture size should remain unchanged.</p><div class="danger custom-block"><p class="custom-block-title">NAMESPACES</p><p>Model identifiers are <strong>not namespaced and cannot contain colons</strong>. Colons were previously used for model inheritance and are invalid in modern geometry formats.</p></div><p><img src="'+g+'" alt=""></p><h2 id="adding-cubes" tabindex="-1">Adding Cubes <a class="header-anchor" href="#adding-cubes" aria-label="Permalink to &quot;Adding Cubes&quot;">​</a></h2><p>Despite not necessarily being perfect cube shapes, elements in your model are called <strong>cubes</strong>. All cubes must be contained within <strong>bones</strong>, which act as groups.</p><p>First, let&#39;s create a root bone for our model from the outliner by clicking on <code>Add Group</code>. Bones can be renamed by pressing <code>F2</code>.</p><p><img src="'+b+'" alt=""></p><p>The &quot;paper bag&quot; model will need two cubes: one for the handle, and one for the main bag. These can be added by selecting your root bone and clicking <code>Add Cube</code>.</p>',14)),a(n,{src:"/assets/images/blocks/block-models/new_cube.png",alt:"",width:"600",class:"my-4"}),s[7]||(s[7]=e("p",null,'Cubes can be moved, resized and rotated from the top toolbar. Below are the two cubes my "paper_bag" model will use.',-1)),a(n,{src:"/assets/images/blocks/block-models/paper_bag_cubes.png",alt:"",width:"300"}),s[8]||(s[8]=e("h2",{id:"removing-faces",tabindex:"-1"},[i("Removing Faces "),e("a",{class:"header-anchor",href:"#removing-faces","aria-label":'Permalink to "Removing Faces"'},"​")],-1)),s[9]||(s[9]=e("p",null,"Some of the faces of our cubes might not need to be visible. In my example, the top face of the paper_bag should be removed so that you can see inside.",-1)),s[10]||(s[10]=e("p",null,"To remove a face, click on it in the preview and remove its UV.",-1)),a(n,{src:"/assets/images/blocks/block-models/paper_bag_top_removed.png",alt:"",width:"600"}),s[11]||(s[11]=e("p",null,"Additionally, only the north and south faces of the handle should be visible. You can select multiple faces by holding Ctrl while clicking on the face names in the UV panel.",-1)),a(n,{src:"/assets/images/blocks/block-models/paper_bag_handle_faces_removed.png",alt:"",width:"600"}),s[12]||(s[12]=e("h2",{id:"previewing-textures",tabindex:"-1"},[i("Previewing Textures "),e("a",{class:"header-anchor",href:"#previewing-textures","aria-label":'Permalink to "Previewing Textures"'},"​")],-1)),s[13]||(s[13]=e("div",{class:"tip custom-block"},[e("p",{class:"custom-block-title"},"TIP"),e("p",null,[i("Textures can be created in Blockbench by clicking "),e("code",null,"Create Texture"),i(" and selecting "),e("code",null,"Blank"),i(".")])],-1)),s[14]||(s[14]=e("p",null,'The "paper_bag" model has multiple pre-made textures, listed below:',-1)),e("ul",null,[e("li",null,[s[0]||(s[0]=e("p",null,[e("code",null,"textures/blocks/paper_bag.png")],-1)),a(n,{src:"/assets/images/blocks/block-models/paper_bag.png",style:{"background-color":"rgb(0,0,0,0.15)"},pixelated:"",width:"128"})]),e("li",null,[s[1]||(s[1]=e("p",null,[e("code",null,"textures/blocks/paper_bag_bottom_fold.png")],-1)),a(n,{src:"/assets/images/blocks/block-models/paper_bag_bottom_fold.png",style:{"background-color":"rgb(0,0,0,0.15)"},pixelated:"",width:"128"})]),e("li",null,[s[2]||(s[2]=e("p",null,[e("code",null,"textures/blocks/paper_bag_side_gusset.png")],-1)),a(n,{src:"/assets/images/blocks/block-models/paper_bag_side_gusset.png",style:{"background-color":"rgb(0,0,0,0.15)"},pixelated:"",width:"128"})])]),s[15]||(s[15]=e("p",null,"These can be imported into Blockbench and then dragged onto each appropriate block face, although they likely won't look quite right...",-1)),a(n,{src:"/assets/images/blocks/block-models/preview_textures_applied.png",alt:"",width:"300"}),s[16]||(s[16]=e("h2",{id:"rearranging-uvs",tabindex:"-1"},[i("Rearranging UVs "),e("a",{class:"header-anchor",href:"#rearranging-uvs","aria-label":'Permalink to "Rearranging UVs"'},"​")],-1)),s[17]||(s[17]=e("p",null,"To get textures into the right positions, you may need to reposition/resize your faces' UV mapping. This can be done by selecting the affected face and using the UV panel.",-1)),a(n,{src:"/assets/images/blocks/block-models/paper_bag_handle_uv.png",alt:"",width:"300"}),a(n,{src:"/assets/images/blocks/block-models/paper_bag_final.png",alt:"",width:"300"}),s[18]||(s[18]=o('<h2 id="changing-material-instances" tabindex="-1">Changing Material Instances <a class="header-anchor" href="#changing-material-instances" aria-label="Permalink to &quot;Changing Material Instances&quot;">​</a></h2><p>Applying custom material instance names can be used to easily define how certain faces are rendered.</p><p>They can be edited by right-clicking on a cube and opening <code>Edit Material Instances</code></p><p><img src="'+m+'" alt=""></p><p>For the &quot;paper_bag&quot; model, the east and west faces should have their own texture. We can indicate this by giving them a material instance.</p><p><img src="'+E+'" alt=""></p><h2 id="applying-geometry-textures" tabindex="-1">Applying Geometry &amp; Textures <a class="header-anchor" href="#applying-geometry-textures" aria-label="Permalink to &quot;Applying Geometry &amp; Textures&quot;">​</a></h2><p>Once exported from <code>File &gt; Export &gt; Export Bedrock Geometry</code> into your <code>RP/models/blocks</code> folder, you can reference a model in your block JSON.</p><p>Then, textures can be applied by material instances through their <code>RP/textures/terrian_texture.json</code> shortname. In this example, the paper_bag shouldn&#39;t block light, so its light dampening is set to 0.</p><div class="warning custom-block"><p class="custom-block-title">BLOCKS.JSON</p><p>Adding <a href="/blocks/block-components#geometry"><code>minecraft:geometry</code></a> to your block will cause the game to ignore texture definitions in <code>RP/blocks.json</code>.</p><p>If you have textures for your block defined in that file, make sure you migrate them to <a href="/blocks/block-components#material-instances"><code>minecraft:material_instances</code></a> for them to appear.</p></div>',10)),a(p,null,{default:l(()=>s[3]||(s[3]=[i("BP/blocks/paper_bag.json")])),_:1}),s[19]||(s[19]=o(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;format_version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.21.60&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;minecraft:block&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:paper_bag&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;menu_category&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;category&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;items&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Apply your model by referencing its identifier</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;minecraft:geometry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;geometry.paper_bag&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Apply textures and other rendering configuration</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;minecraft:material_instances&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;texture&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:paper_bag&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;render_method&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alpha_test&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Disable backface culling and allow transparency</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;down&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;texture&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:paper_bag_bottom_fold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;render_method&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alpha_test&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Must be the same in all instances</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // Custom instance name used in model</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;side_gusset&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;texture&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wiki:paper_bag_side_gusset&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;render_method&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alpha_test&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Must be the same in all instances</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Prevent shadows</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;minecraft:light_dampening&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="what-s-next" tabindex="-1">What&#39;s Next? <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What&#39;s Next?&quot;">​</a></h2>`,2)),a(d,null,{default:l(()=>[a(r,{title:"Create Culling Rules",link:"/blocks/block-culling",image:"/assets/images/homepage/crafting_table_0.png"},{default:l(()=>s[4]||(s[4]=[e("p",null,"Creating culling rules for your model can aid performance by telling the game to unrender hidden parts of your model.",-1)])),_:1}),a(r,{title:"Conditional Bones",link:"/blocks/block-components#bone-visibility",image:"/assets/images/homepage/scripting.png"},{default:l(()=>s[5]||(s[5]=[e("p",null,[i('Use the "bone_visibility" parameter of the '),e("a",{href:"/blocks/block-components#geometry"},"geometry"),i(" component to render different model bones based on your block's current permutation.")],-1)])),_:1})]),_:1})])}const B=h(y,[["render",f]]);export{x as __pageData,B as default};
