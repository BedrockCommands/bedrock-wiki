import{_ as s,c as i,a,P as n,U as e,r as o,o as r,T as l,d$ as p}from"./chunks/framework.CiuNV1Mk.js";const b=JSON.parse('{"title":"Custom Pottery Sherds","description":"Learn how to make custom pottery sherds.","frontmatter":{"title":"Custom Pottery Sherds","description":"Learn how to make custom pottery sherds.","category":"Tutorials","mentions":["SmokeyStack"]},"headers":[],"relativePath":"items/custom-pottery-sherd.md","filePath":"items/custom-pottery-sherd.md","lastUpdated":1724109700000}'),h={name:"items/custom-pottery-sherd.md"},d=e('<p>Minecraft Bedrock allows us to add custom pottery sherds. This article will cover how to create them.</p><h2 id="registering-the-sherd" tabindex="-1">Registering the Sherd <a class="header-anchor" href="#registering-the-sherd" aria-label="Permalink to &quot;Registering the Sherd&quot;">​</a></h2><p>Pottery Sherds are controlled by an item tag! Specifically the <code>&quot;minecraft:decorated_pot_sherds&quot;</code>. Simply add this tag to your existing item. If you don&#39;t know how to make a custom item, please refer to our <a href="/items/items-intro.html">guide</a>. If you do not know how to add item tags, please refer to this <a href="/items/item-tags.html">article</a>.</p><p>Now that we have registered our sherd, we can test it by putting the sherd in a crafting table. If you applied the tag correctly, the crafting table should output a deocrated pot!</p><p><img src="'+p+'" alt="Image of the crafting output"></p><p>However, the decorated pot still will not display the sherd itself. This is because we haven&#39;t told the decorated pot what image to display!</p><h2 id="displaying-the-sherd" tabindex="-1">Displaying the Sherd <a class="header-anchor" href="#displaying-the-sherd" aria-label="Permalink to &quot;Displaying the Sherd&quot;">​</a></h2><p>To tell the game what image the sherd is supposed to display, we need to edit the decorated pot&#39;s client entity file. Add the following JSON file:</p>',8),c=e(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;format_version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.8.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;minecraft:client_entity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:decorated_pot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;textures&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;custom_item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path/to/the/display&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li><code>custom_item</code> is the identifier of your custom pottery sherd. Replace this with the identifier of your item.</li><li><code>path/to/the/display</code> refers to the path that points to your display. Since this is a reference path, you can point it to any image in the <code>textures</code> folder. Please note that decorated pots does not support transparency.</li></ul><p>If you&#39;ve done everything right, your decorated pot will now display the sherd you want instead of being a blank pot!</p><p><strong>Q: Won&#39;t editing the client entity file make my add-on incompatible?</strong></p><p><strong>A: It does not! Client entity files actually merge definitions together. So long your item identifier is unique, other add-ons won&#39;t override them! As a good practice, prefix your identifier with your namespace.</strong></p>`,5);function u(k,m,y,g,E,_){const t=o("CodeHeader");return r(),i("div",null,[d,a(t,null,{default:n(()=>[l("RP/entity/decorated_pot.json")]),_:1}),c])}const C=s(h,[["render",u]]);export{b as __pageData,C as default};
