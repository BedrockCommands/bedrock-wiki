import{_ as p,E as h,j as k,k as r,l as i,A as t,a5 as l,J as a,I as e}from"./chunks/framework.3Z9w-w8R.js";const C=JSON.parse('{"title":"Molang into Scoreboard","description":"Turn MoLang variable value into scoreboard value.","frontmatter":{"title":"Molang into Scoreboard","mentions":["SirLich","MedicalJewel105","shanewolf38","Lufurrius","TheItsNameless","ThomasOrs"],"description":"Turn MoLang variable value into scoreboard value."},"headers":[],"relativePath":"animation-controllers/molang-into-scoreboard.md","filePath":"animation-controllers/molang-into-scoreboard.md"}'),o={name:"animation-controllers/molang-into-scoreboard.md"};function E(d,s,F,g,u,y){const n=h("CodeHeader");return r(),k("div",null,[s[2]||(s[2]=i("p",null,[a("The following provides a method to read any Molang (variable, query, etc.) into a score instantly. Ensure that the animation name called in the controllers "),i("code",null,"convert"),a(" state matches the name of the animation (animation.namespace.molang_to_score) as defined in the entity.")],-1)),s[3]||(s[3]=i("p",null,[i("strong",null,"NOTE:"),a(" These two commands must be run in the world as part of the setup: "),i("code",null,"/scoreboard objectives add MoLang dummy"),i("code",null,'/scoreboard players set "#10" MoLang 10')],-1)),t(n,null,{default:e(()=>s[0]||(s[0]=[a("BP/animation_controllers/molang_to_score.animation_controllers.json")])),_:1}),s[4]||(s[4]=l("",1)),t(n,null,{default:e(()=>s[1]||(s[1]=[a("BP/animations/molang_to_score.animation.json")])),_:1}),s[5]||(s[5]=l("",3))])}const b=p(o,[["render",E]]);export{C as __pageData,b as default};
