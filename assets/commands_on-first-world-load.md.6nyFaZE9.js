import{_ as r,c as d,a,P as t,U as n,b as e,T as s,r as o,o as c}from"./chunks/framework.KjOEH70y.js";const F=JSON.parse('{"title":"On First World Load","description":"This system will run your desired commands on the event that the world is loaded for the first time.","frontmatter":{"title":"On First World Load","category":"On Event Systems","mentions":["BedrockCommands","zheaEvyline","SmokeyStack","cda94581"],"nav_order":6,"description":"This system will run your desired commands on the event that the world is loaded for the first time."},"headers":[],"relativePath":"commands/on-first-world-load.md","filePath":"commands/on-first-world-load.md","lastUpdated":1723852445000}'),p={name:"commands/on-first-world-load.md"},h=n('<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p><a href="https://discord.gg/SYstTYx5G5" target="_blank" rel="noreferrer">Sourced By Bedrock Commands Community Discord</a></p><p>This system will run your desired commands on the event that the world is loaded for the first time.</p><blockquote><p><strong>Note:</strong> a <a href="/commands/mcfunctions.html">Function</a> Pack is required to achieve this system since it is the <code>tick.json</code> file which allows us to run commands as soon as the world is initialised.</p></blockquote><h2 id="tick-json" tabindex="-1">Tick Json <a class="header-anchor" href="#tick-json" aria-label="Permalink to &quot;Tick Json&quot;">​</a></h2>',5),u=n(`<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;values&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;initialise&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="system" tabindex="-1">System <a class="header-anchor" href="#system" aria-label="Permalink to &quot;System&quot;">​</a></h2>`,2),m=n(`<div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scoreboard objectives add world dummy</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scoreboard players add initialised world 0</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Your Commands Here (example)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">execute if score initialised world matches 0 run say New world created!</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scoreboard players set initialised world 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Here we have used an <code>execute - say</code> command as an example but you can use any command you prefer and as many as you require.</p><p>Just make sure to follow the given order and properly use the <code>execute if score</code> command as shown to run the commands you need.</p><h2 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation&quot;">​</a></h2><ul><li><strong><code>initialised=0</code></strong> this means the world has just initialised and we are yet to run the initlisation commands.</li><li><strong><code>initialised=1</code></strong> this means the world has been initialised and we have already run the initialisation commands.</li></ul><p>An objective of the name <code>world</code> is added for us to save scores to it so that we can track whether the world has been initialised or not. This also allows us to structure our commands to only execute at world initialisation.</p><p>Following the creation of the objective, a score of <code>0</code> is added to the FakePlayer name <code>initialised</code>. This will register it to the objective and enable us to use the <code>execute if score</code> command structure to run our desired commands.</p><p>Finally the score for <code>initialised</code> is set to 1 after all the commands are run in order to prevent it from executing more than once.</p><h2 id="folder-structure" tabindex="-1">Folder Structure <a class="header-anchor" href="#folder-structure" aria-label="Permalink to &quot;Folder Structure&quot;">​</a></h2>`,9),b=e("blockquote",null,[e("p",null,[e("strong",null,"Note:"),s(" the scoreboard names (in this case: 'world') may end up being used by other people. Appending "),e("code",null,"_"),s(" and a set of randomly generated characters after would be a choice that reduces the probability of collisions. Similar technique can be employed for the "),e("code",null,".mcfunction"),s(" filenames. Ex:")]),e("ul",null,[e("li",null,[e("code",null,"world_0fe678")]),e("li",null,[e("code",null,"initialise_0fe678.mcfunction")])])],-1);function _(k,f,y,g,w,v){const i=o("CodeHeader"),l=o("FolderView");return c(),d("div",null,[h,a(i,null,{default:t(()=>[s("BP/functions/tick.json")]),_:1}),u,a(i,null,{default:t(()=>[s("BP/functions/initialise.mcfunction")]),_:1}),m,a(l,{paths:["BP","BP/functions","BP/pack_icon.png","BP/manifest.json","BP/functions/initialise.mcfunction","BP/functions/tick.json"]}),b])}const T=r(p,[["render",_]]);export{F as __pageData,T as default};
