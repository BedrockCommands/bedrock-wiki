import{_ as l,c as h,a as e,P as a,U as i,r as o,o as p,T as t,aH as n}from"./chunks/framework.CRyszoVz.js";const A=JSON.parse('{"title":"Look Detection","description":"This command-technique allows you to detect when a target looks at a player/entity/coordinate and subsequently run your desired commands.","frontmatter":{"title":"Look Detection","category":"Techniques","mention":["BedrockCommands","Plagiatus","AjaxGb"],"description":"This command-technique allows you to detect when a target looks at a player/entity/coordinate and subsequently run your desired commands."},"headers":[],"relativePath":"commands/look-detection.md","filePath":"commands/look-detection.md","lastUpdated":1724353434000}'),d={name:"commands/look-detection.md"},k=i('<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p><a href="https://discord.gg/SYstTYx5G5" target="_blank" rel="noreferrer">Sourced By Bedrock Commands Community Discord</a></p><p><strong>Credits:</strong> <em>@AjaxGb</em></p><p>This command-technique allows you to detect when a target looks at a player/entity/block and subsequently run your desired commands.</p><h2 id="command" tabindex="-1">Command <a class="header-anchor" href="#command" aria-label="Permalink to &quot;Command&quot;">​</a></h2>',5),r=i('<div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">execute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> at </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s anchored eyes facing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">entity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> coordinate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> positioned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^^^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> positioned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~~-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.62</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rotated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s positioned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^^^-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s [r=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] run </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">command</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+n+'" alt="A Repeating Command Block"></p><p><strong>Command Breakdown:</strong></p><ul><li><code>as &lt;target&gt;</code><ul><li>sets the execution target. Example: <ul><li><code>as @p</code> (closest player)</li><li><code>as @e [type=zombie]</code> (all zombies)</li></ul></li></ul></li><li><code>at @s</code><ul><li>sets the execution position to the target&#39;s feet.</li></ul></li><li><code>anchored eyes</code><ul><li>brings the execution position up to the target&#39;s eye level.</li></ul></li><li><code>facing &lt;entity | coordinate&gt;</code><ul><li>sets the execution rotation facing an entity or coordinate. Example: <ul><li><code>facing 0 0 0</code> facing coordinate: 0,0,0.</li><li><code>facing entity @e [type=pig, c=1]</code> (facing closest pig)</li></ul></li></ul></li><li><code>positioned ^^^1</code><ul><li>from previous point, pushes the execution position 1 block forward in the direction of the entity/coordinate.</li></ul></li><li><code>positioned ~~-1.62~</code><ul><li>lowers the execution position back to that of the player&#39;s feet on the y axis. Which is 1.62 blocks below eye level.</li><li>Note: Due to the <a href="https://bugs.mojang.com/browse/MCPE-165051" target="_blank" rel="noreferrer">MCPE-165051</a> bug, you cannot use <code>anchored eyes</code> in place of this.</li></ul></li><li><code>rotated as @s</code><ul><li>Reverts the execution rotation to that of the target.</li></ul></li><li><code>positioned ^^^-1</code><ul><li>from previous point, pushes the execution position 1 block backwards from the direction the target is facing.</li></ul></li><li><code>if entity @s [r=0.2]</code><ul><li>checks if the target is within a 0.2 block radius from the execution position. ie., check if after this back and forth we&#39;ve arrived roughly back at the target&#39;s feet position.</li><li>To increase or decrease the tolerance for what is considered &quot;close enough&quot;, change the <code>0.2</code> distance argument. <ul><li>it needs to be between <code>0.2</code> and <code>2</code>, as <code>2</code> basically means you can look in the opposite direction and it&#39;s still &quot;close enough&quot;. So, realistically you want to most likely stay well below <code>1</code>.</li></ul></li><li>To calculate the exact viewing cone angle, see below.</li></ul></li></ul><p><strong>Examples:</strong></p><p>Run a <code>/say</code> command when looking at the eyes of the nearest cow tagged &#39;target&#39;:</p>',6),c=i('<div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">execute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a at </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s anchored eyes facing entity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=cow, tag=target, c=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] eyes positioned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~~-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.62</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> positioned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^^^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rotated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s positioned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^^^-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s [r=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] run say hello cow!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+n+'" alt="A Repeating Command Block"></p><p>Run a <code>/say</code> command when looking at the position 10,20,30:</p>',3),g=i('<div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">execute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a at </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s anchored eyes facing </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> positioned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~~-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.62</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> positioned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^^^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rotated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s positioned </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^^^-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s [r=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] run say hello block!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+n+'" alt="A Repeating Command Block"></p><h2 id="calculate-viewing-angle" tabindex="-1">Calculate Viewing Angle <a class="header-anchor" href="#calculate-viewing-angle" aria-label="Permalink to &quot;Calculate Viewing Angle&quot;">​</a></h2><p>To approximate the distance/radius you want to use based on your viewing angle, you can use the following formula, where <code>α</code> is the angle that you want this method to trigger inside of, left and right of the target:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>r = 2 * sin ( α / 2 )</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>or, the inverse to calculate what viewing angle a certain radius / distance (<code>r</code>) value will give you:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>α = sin^(-1) (r / 2) * 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>Note: Depending on your calculator, you&#39;ll need to convert from radians to degrees.</p></blockquote><p>With the above calculation, the example value of <code>r=0.2</code> leaves us with roughly a 12° angle by which we can miss the exact target in either direction and still have it considered &quot;close enough.&quot;</p>',9);function u(y,E,m,b,F,_){const s=o("CodeHeader");return p(),h("div",null,[k,e(s,null,{default:a(()=>[t("mcfunction")]),_:1}),r,e(s,null,{default:a(()=>[t("mcfunction")]),_:1}),c,e(s,null,{default:a(()=>[t("mcfunction")]),_:1}),g])}const f=l(d,[["render",u]]);export{A as __pageData,f as default};
