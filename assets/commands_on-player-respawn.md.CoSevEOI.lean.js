import{_ as l,c as d,a as s,P as t,U as n,b as e,T as a,r,o as c,aW as p}from"./chunks/framework.Dhk1h2hq.js";const C=JSON.parse('{"title":"On Player Respawn","description":"This system will run your desired commands on the event that a player respawns from death state.","frontmatter":{"title":"On Player Respawn","category":"On Event Systems","mentions":["BedrockCommands","zheaEvyline"],"nav_order":5,"description":"This system will run your desired commands on the event that a player respawns from death state."},"headers":[],"relativePath":"commands/on-player-respawn.md","filePath":"commands/on-player-respawn.md","lastUpdated":1724523830000}'),h={name:"commands/on-player-respawn.md"},u=n("",8),m=n("",11),y=n("",2),_=e("blockquote",null,[e("p",null,[a("Note: The scoreboard names (in this case: 'respawn') may end up being used by other people. Appending "),e("code",null,"_"),a(" and a set of randomly generated characters after would be a choice that reduces the probability of collisions. Similar technique can be employed for the "),e("code",null,".mcfunction"),a(" filenames. Ex:")]),e("ul",null,[e("li",null,[e("code",null,"respawn_0fe678")]),e("li",null,[e("code",null,"on_player_respawn_0fe678.mcfunction")])])],-1);function w(b,f,k,g,v,E){const o=r("CodeHeader"),i=r("FolderView");return c(),d("div",null,[u,s(o,null,{default:t(()=>[a("on_player_respawn.mcfunction")]),_:1}),m,s(o,null,{default:t(()=>[a("BP/functions/tick.json")]),_:1}),y,s(i,{paths:["BP","BP/functions","BP/pack_icon.png","BP/manifest.json","BP/functions/on_player_respawn.mcfunction","BP/functions/tick.json"]}),_])}const P=l(h,[["render",w]]);export{C as __pageData,P as default};
